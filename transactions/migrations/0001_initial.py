# Generated by Django 5.1.4 on 2025-01-05 11:26

import django.db.models.deletion
import entryhold.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="AccountType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Type of account (e.g., Savings, Checking)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the account type",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Account Type",
                "verbose_name_plural": "Account Types",
            },
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cif",
                    models.CharField(
                        help_text="Customer Information File (CIF) number",
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("date_of_birth", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=10,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True, unique=True),
                ),
                ("address_line1", models.CharField(max_length=255)),
                ("address_line2", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=20)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indicates if the customer account is active",
                    ),
                ),
                ("home_branch", models.CharField(max_length=5)),
            ],
            options={
                "verbose_name": "Customer",
                "verbose_name_plural": "Customers",
            },
        ),
        migrations.CreateModel(
            name="MaxLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("limit", models.PositiveIntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TransactionType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the transaction type (e.g., Transfer, Deposit)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the transaction type",
                        null=True,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Code of the transaction type",
                        max_length=3,
                        unique=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction Type",
                "verbose_name_plural": "Transaction Types",
            },
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        help_text="Currency code (e.g., USD, EUR)", max_length=3
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        help_text="Unique account number", max_length=12, unique=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("BLOCKED", "Blocked"),
                            ("CLOSED", "Closed"),
                            ("PENDING", "Pending"),
                        ],
                        default="ACTIVE",
                        help_text="Current status of the account",
                        max_length=10,
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Current balance of the account",
                        max_digits=15,
                    ),
                ),
                (
                    "branch_code",
                    models.CharField(
                        help_text="Code of the branch where the account is held",
                        max_length=5,
                    ),
                ),
                (
                    "opening_date",
                    models.DateField(
                        auto_now=True, help_text="The date when the account was opened"
                    ),
                ),
                (
                    "last_activity_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="The last time there was activity on the account",
                        null=True,
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Last account update timestamp"
                    ),
                ),
                (
                    "account_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bank_accounts",
                        to="transactions.accounttype",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bank_accounts",
                        to="transactions.customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Account",
                "verbose_name_plural": "Accounts",
            },
        ),
        migrations.CreateModel(
            name="Ledger",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the ledger (e.g., General Ledger)",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the ledger", null=True
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the ledger was created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When the ledger was last updated"
                    ),
                ),
                (
                    "parent_ledger",
                    models.ForeignKey(
                        blank=True,
                        help_text="Reference to a parent ledger, if this is a sub-ledger",
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="sub_ledgers",
                        to="transactions.ledger",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LedgerEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        help_text="Currency code (e.g., USD, EUR)", max_length=3
                    ),
                ),
                (
                    "dr_cr_type",
                    models.CharField(
                        choices=[("DEBIT", "Debit"), ("CREDIT", "Credit")],
                        max_length=6,
                        verbose_name="Entry Type",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=20, verbose_name="Amount"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "transaction_reference",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Transaction Reference"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "ledger",
                    models.ForeignKey(
                        help_text="The ledger this journal entry belongs to",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="journal_entries",
                        to="transactions.ledger",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(models.Model, entryhold.models.SupplymentaryClassAdderMixin),
        ),
        migrations.CreateModel(
            name="TransferIntent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        help_text="Currency code (e.g., USD, EUR)", max_length=3
                    ),
                ),
                ("object_id_from", models.PositiveIntegerField()),
                ("object_id_to", models.PositiveIntegerField()),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Amount involved in the transaction",
                        max_digits=15,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description or note for the transaction",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Completed", "Completed"),
                            ("Failed", "Failed"),
                            ("Reversed", "Reversed"),
                        ],
                        default="Pending",
                        help_text="Current status of the transaction",
                        max_length=20,
                    ),
                ),
                (
                    "transaction_reference",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique reference identifier for the transaction",
                        unique=True,
                    ),
                ),
                (
                    "initiated_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the transaction was initiated",
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when the transaction was completed",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the transaction record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the transaction record was last updated",
                    ),
                ),
                (
                    "content_type_from",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="from_account_model",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "content_type_to",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="to_account_model",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "transaction_type",
                    models.ForeignKey(
                        help_text="Type of the transaction (e.g., Transfer, Deposit)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="transactions.transactiontype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(models.Model, entryhold.models.SupplymentaryClassAdderMixin),
        ),
        migrations.CreateModel(
            name="AccountEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        help_text="Currency code (e.g., USD, EUR)", max_length=3
                    ),
                ),
                (
                    "dr_cr_type",
                    models.CharField(
                        choices=[("DEBIT", "Debit"), ("CREDIT", "Credit")],
                        max_length=6,
                        verbose_name="Entry Type",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=20, verbose_name="Amount"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "account",
                    models.ForeignKey(
                        help_text="The account this journal entry belongs to",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="account_entries",
                        to="transactions.account",
                    ),
                ),
                (
                    "transaction_reference",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="transactions.transferintent",
                        verbose_name="Transaction Reference",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(models.Model, entryhold.models.SupplymentaryClassAdderMixin),
        ),
    ]
